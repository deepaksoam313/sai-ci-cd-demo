name: Build Java JAR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: List files (debug)
      run: ls -R

    - name: Compile Java
      run: javac HelloServer.java

    - name: Create manifest
      run: |
        mkdir -p META-INF
        echo "Manifest-Version: 1.0" > META-INF/MANIFEST.MF
        echo "Main-Class: HelloServer" >> META-INF/MANIFEST.MF

    - name: Create JAR
      run: jar cfm helloserver.jar META-INF/MANIFEST.MF *.class

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: helloserver-jar
        path: helloserver.jar
        
    - name: Install Sonar Scanner
      run: |
        curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
        unzip sonar-scanner.zip
    - name: Add Sonar Scanner to PATH
      run: echo "${{ github.workspace }}/sonar-scanner-4.8.0.2856-linux/bin" >> $GITHUB_PATH

    - name: Check /bin/sh existence
      run: ls -l /bin/sh /usr/bin/sh || true

    
    - name: Run SonarQube Scanning
      env:
        JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/21.0.8-9/x64
        PATH: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/21.0.8-9/x64/bin:${{ env.PATH }}
      shell: bash
      run: |
        sonar-scanner \
          -Dsonar.projectKey=my-java-project \
          -Dsonar.sources=. \
          -Dsonar.host.url=http://3.110.83.166:9000 \
          -Dsonar.login='sqa_69e7c04e275904c9a0c4581a695c8f1b93435f6c'



        
        
